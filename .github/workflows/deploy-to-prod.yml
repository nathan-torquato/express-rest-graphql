name: deploy-to-prod

on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  PROJECT_NAME: gha-alpha

jobs:
  log_vars:
    runs-on: ubuntu-latest
    environment: test
    steps:
      - name: Print env vars
        run: |
          echo "Project name: ${{ env.PROJECT_NAME }}"
          echo "API URL: $API_URL"
          echo "DB_PASSWORD: ${{ secrets.DB_PASSWORD }}"
  setup:
    runs-on: ubuntu-latest
    outputs:
      js_file_name: ${{ steps.set-js-file-name.outputs.JS_FILE_NAME }}
    steps:
      - name: Print env vars
        run: |
          echo $PROJECT_NAME
          echo "Project name: ${{ env.PROJECT_NAME }}"
          echo "DB_PASSWORD: ${{ secrets.DB_PASSWORD }}"

      - name: Get code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Lint
        run: yarn lint

      - name: Test
        run: yarn test

      - name: Build
        run: yarn build

      - name: Publish JS file name
        id: set-js-file-name
        run: echo "JS_FILE_NAME=$(ls dist/*.js)" >> $GITHUB_OUTPUT

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist

  deploy:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      # This is for learning purposes only. You should not use this in production.
      - name: Installs dependencies
        run: yarn install --frozen-lockfile

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: dist

      - name: Output artifact
        run: ls

      - name: Output JS file name
        run: echo ${{ needs.setup.outputs.js_file_name }}

      - name: Deploy to production
        run: echo "Deploying to production..."
